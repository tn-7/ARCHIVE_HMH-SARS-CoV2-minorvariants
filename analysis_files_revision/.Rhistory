theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
lasso_xy_plot
lasso_under_30
lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
ggplot(aes(x = abs(n_var_over_30), y = abs(n_var_under_30), label = factor)) + geom_point() +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)  +
geom_label_repel(max.overlaps = Inf, alpha = 0.3,
segment.size      = 0.5,
segment.curvature = -0.1
)  + scale_y_continuous(trans = "log2") + scale_x_continuous(trans = "log2") + #ylim(c(-0.25,0.25)) +
theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
lasso_xy_plot
lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
ggplot(aes(x = abs(n_var_over_30), y = abs(n_var_under_30), label = factor)) + geom_point() +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)  +
geom_label_repel(max.overlaps = Inf, alpha = 0.3,
segment.size      = 0.5,
segment.curvature = -0.1
)  + scale_y_continuous(trans = "log2") + scale_x_continuous(trans = "log2") + #ylim(c(-0.25,0.25)) +
theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data") + coord_flip()
lasso_xy_plot
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, normalize) %>% cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
p_sub_over = scale_scan_factors(
patient_var_tmp %>% filter(n_var > 30 & CT > 26),
scan_factors_trim)
y_over<-log2(p_sub_over$n_var+1)
x_over<-data.matrix(p_sub_over[, colnames(p_sub_over) %in% scan_factors_trim])
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
lasso_over_30 = lasso_xy(x_over, y_over) %>% mutate(cutoff = "n_var_over_30")
lasso_bio_vs_artifact = rbind(lasso_under_30, lasso_over_30)
lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
ggplot(aes(x = n_var_over_30, y = n_var_under_30, label = factor)) +geom_point() +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
geom_label_repel(max.overlaps = Inf, alpha = 0.3,
segment.size      = 0.5,
segment.curvature = -0.1
)  + #ylim(c(-0.25,0.25)) +
theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
lasso_xy_plot
##ggsave("#ggsave/lasso_xy_plot.pdf", lasso_xy_plot, height = 5, width = 5)
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, normalize) %>% cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# p_sub_over = scale_scan_factors(
#   patient_var_tmp %>% filter(n_var > 30 & CT > 26),
#                                 scan_factors_trim)
# y_over<-log2(p_sub_over$n_var+1)
# x_over<-data.matrix(p_sub_over[, colnames(p_sub_over) %in% scan_factors_trim])
#
#
# lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# lasso_over_30 = lasso_xy(x_over, y_over) %>% mutate(cutoff = "n_var_over_30")
#
# lasso_bio_vs_artifact = rbind(lasso_under_30, lasso_over_30)
#
#
# lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
# ggplot(aes(x = n_var_over_30, y = n_var_under_30, label = factor)) +geom_point() +
#   geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
#   geom_label_repel(max.overlaps = Inf, alpha = 0.3,
#     segment.size      = 0.5,
#     segment.curvature = -0.1
#   )  + #ylim(c(-0.25,0.25)) +
#   theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
#   xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
# lasso_xy_plot
# ##ggsave("#ggsave/lasso_xy_plot.pdf", lasso_xy_plot, height = 5, width = 5)
lasso_under_30
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, scale) %>% cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
lasso_under_30
# p_sub_over = scale_scan_factors(
#   patient_var_tmp %>% filter(n_var > 30 & CT > 26),
#                                 scan_factors_trim)
# y_over<-log2(p_sub_over$n_var+1)
# x_over<-data.matrix(p_sub_over[, colnames(p_sub_over) %in% scan_factors_trim])
#
#
# lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# lasso_over_30 = lasso_xy(x_over, y_over) %>% mutate(cutoff = "n_var_over_30")
#
# lasso_bio_vs_artifact = rbind(lasso_under_30, lasso_over_30)
#
#
# lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
# ggplot(aes(x = n_var_over_30, y = n_var_under_30, label = factor)) +geom_point() +
#   geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
#   geom_label_repel(max.overlaps = Inf, alpha = 0.3,
#     segment.size      = 0.5,
#     segment.curvature = -0.1
#   )  + #ylim(c(-0.25,0.25)) +
#   theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
#   xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
# lasso_xy_plot
# ##ggsave("#ggsave/lasso_xy_plot.pdf", lasso_xy_plot, height = 5, width = 5)
index <- createDataPartition(y, p=0.75, list=FALSE)
library(caret)
index <- createDataPartition(y, p=0.75, list=FALSE)
set.seed(1)
index <- createDataPartition(y, p=0.75, list=FALSE)
x_train <- x[index, ]
x_test <- x[-index, ]
y_train <- y[index]
y_test<- y[-index]
x_train
lasso<-train(y= y_train,
x = X_train,
method = 'glmnet',
tuneGrid = expand.grid(alpha = 1, lambda = 1)
)
lasso<-train(y= y_train,
x = x_train,
method = 'glmnet',
tuneGrid = expand.grid(alpha = 1, lambda = 1)
)
lasso
coef(lasso$finalModel, lasso$bestTune$lambda)
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, scale) %>% cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# p_sub_over = scale_scan_factors(
#   patient_var_tmp %>% filter(n_var > 30 & CT > 26),
#                                 scan_factors_trim)
# y_over<-log2(p_sub_over$n_var+1)
# x_over<-data.matrix(p_sub_over[, colnames(p_sub_over) %in% scan_factors_trim])
#
#
# lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# lasso_over_30 = lasso_xy(x_over, y_over) %>% mutate(cutoff = "n_var_over_30")
#
# lasso_bio_vs_artifact = rbind(lasso_under_30, lasso_over_30)
#
#
# lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
# ggplot(aes(x = n_var_over_30, y = n_var_under_30, label = factor)) +geom_point() +
#   geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
#   geom_label_repel(max.overlaps = Inf, alpha = 0.3,
#     segment.size      = 0.5,
#     segment.curvature = -0.1
#   )  + #ylim(c(-0.25,0.25)) +
#   theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
#   xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
# lasso_xy_plot
# ##ggsave("#ggsave/lasso_xy_plot.pdf", lasso_xy_plot, height = 5, width = 5)
lasso_under_30
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar()
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity")
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity") +
coord_flip()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coef)
colnames(lasso_under_30)
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient)
lasso_under_30
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity") +
coord_flip()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_relevel(.$factor))
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity") +
coord_flip()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_relevel(as.character(.$factor)))
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity") +
coord_flip()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(as.character(.$factor)))
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(factor, coefficent)))
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(factor, coefficent))
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(factor, coefficient))
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) + geom_bar(stat="identity") +
coord_flip()
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 5, width = 3)
lasso_initial_features = lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip()
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 5, width = 3)
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 4, width = 3)
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, normalize) %>% # scale will z scale it, instead of the normalize fx above which is min max
cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(factor, coefficient))
lasso_initial_features = lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip()
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 4, width = 3)
# p_sub_over = scale_scan_factors(
#   patient_var_tmp %>% filter(n_var > 30 & CT > 26),
#                                 scan_factors_trim)
# y_over<-log2(p_sub_over$n_var+1)
# x_over<-data.matrix(p_sub_over[, colnames(p_sub_over) %in% scan_factors_trim])
#
#
# lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30")
# lasso_over_30 = lasso_xy(x_over, y_over) %>% mutate(cutoff = "n_var_over_30")
#
# lasso_bio_vs_artifact = rbind(lasso_under_30, lasso_over_30)
#
#
# lasso_xy_plot = lasso_bio_vs_artifact %>% spread(., cutoff, coefficient) %>%
# ggplot(aes(x = n_var_over_30, y = n_var_under_30, label = factor)) +geom_point() +
#   geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
#   geom_label_repel(max.overlaps = Inf, alpha = 0.3,
#     segment.size      = 0.5,
#     segment.curvature = -0.1
#   )  + #ylim(c(-0.25,0.25)) +
#   theme_minimal() + ylab("LASSO coef. on log2(n_var+1), Ct<26 & n_var<30\nhypothesized biological data") +
#   xlab("LASSO coef. on log2(n_var+1), Ct>26 & n_var>30\nhypothesized nonbiological data")
# lasso_xy_plot
# ##ggsave("#ggsave/lasso_xy_plot.pdf", lasso_xy_plot, height = 5, width = 5)
library(ggbreak)
lasso_initial_features = lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip() + scale_x_break(c(0.5, 1.4))
lasso_initial_features
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip() + scale_x_break(c(0.5, 1.4))
lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip() + scale_y_break(c(0.5, 1.4))
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, scale) %>% # scale will z scale it, instead of the normalize fx above which is min max
cbind(p_sub %>% select(!one_of(scan_factors)))
scan_factors = c('Duration','age18under','age55plus','sex','chronic_lung_disease',
'chronic_liver_disease', 'chronic_kidney_disease', 'chronic_heart_disease',
'transplant_patient', 'hiv', 'hypertension', 'diabetes', 'cancer', 'obesity',
'plasma', 'mAb', 'admitted_hospital','vaccine_status',
'vocAlpha','vocDelta','collection_month',
'surveillance','CT','median_coverage','run', 'PUI')
scale_scan_factors = function(patient_var_tmp, scan_factors) {
p_sub = patient_var_tmp %>%
select(MCoVNumber,lineage,Duration,COLLECTION_DT:high_counts,one_of(scan_factors)) %>%
unique
p_sub[, colnames(p_sub) %in% scan_factors]
p_sub_scaled = p_sub %>% select(one_of(scan_factors)) %>%
mutate_if(is.numeric, scale) %>% # scale will z scale it, instead of the normalize fx above which is min max
cbind(p_sub %>% select(!one_of(scan_factors)))
return(p_sub_scaled)
}
library(ggbreak)
scan_factors_trim = scan_factors[!scan_factors %in% c("transplant_patient", "hiv")]
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
y<-log2(p_sub_scaled$n_var+1)
x<-(p_sub_scaled[, colnames(p_sub_scaled) %in% scan_factors_trim]) %>% data.matrix()
lasso_under_30 = lasso_xy(x,y) %>% mutate(cutoff = "n_var_under_30") %>%
arrange(coefficient) %>% mutate(factor = fct_reorder(factor, coefficient))
lasso_initial_features
lasso_initial_features = lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip() + scale_y_break(c(0.5, 1.4))
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 4, width = 3)
lasso_initial_features = lasso_under_30 %>% ggplot(aes(x=factor, y = coefficient)) +
geom_bar(stat="identity") + coord_flip()
ggsave("ggsave/lasso_initial_features.pdf", lasso_initial_features, height = 4, width = 3)
check_levels = function(x) { return(levels(x) %>% length ==2) }
numeric1 = function(x) { return(as.numeric(x)-1) }
plot_feature_n = function(p_sub_scaled) {
sum_n = nrow(p_sub_scaled)
feature_stats_IP = p_sub_scaled %>% select(one_of(scan_factors)) %>%
filter(admitted_hospital == 1) %>%
select_if(is.factor) %>% select_if(check_levels) %>%
mutate_if(is.factor, numeric1) %>% colSums() %>%
data.frame(feature = names(.), IP = .)
sum_n_IP = feature_stats_IP["admitted_hospital","IP"]
feature_stats_OP = p_sub_scaled %>% select(one_of(scan_factors)) %>%
filter(admitted_hospital == 0) %>%
select_if(is.factor) %>% select_if(check_levels) %>%
mutate_if(is.factor, numeric1) %>% colSums() %>%
data.frame(feature = names(.), OP = .)
sum_n_OP = sum_n - sum_n_IP
feature_stats = left_join(feature_stats_IP, feature_stats_OP)
feature_n_plot = feature_stats %>% ggplot(aes(x=IP, y = OP, label = feature)) +
geom_abline(slope =1, color = "red", linetype = "dashed") +
geom_point() + geom_text_repel() +
scale_y_continuous( breaks = seq(0,1500,100), limits = c(0,1400),
sec.axis = sec_axis(~ . / sum_n_OP, labels = scales::label_percent(),
breaks = seq(0,1,0.1))) +
scale_x_continuous( breaks = seq(0,2000,100), guide = guide_axis(angle = 90),
sec.axis = sec_axis(~ . / sum_n_IP, labels = scales::label_percent(),
breaks = seq(0,1,0.1))) + theme_pubr() +
xlab(paste0("Inpatient (n & % of ", sum_n_IP, ")")) +
ylab(paste0("Outpatient (n & % of ", sum_n_OP, ")"))
return(feature_n_plot)
}
undated_feature_n_plot = plot_feature_n(p_sub_scaled)
julyonwards_feature_n_plot = plot_feature_n(p_sub_scaled %>%
filter(collection_date>="2021-07-01"))
feature_n_plot = ggarrange(undated_feature_n_plot + ggtitle("12/2020 - 11/2021"),
julyonwards_feature_n_plot + ggtitle("07/2021 - 11/2021"), align = "h",
labels = list("A","B"))
feature_n_plot
#ggsave("#ggsave/feature_n_plot.pdf", feature_n_plot, width = 16, height = 8)
feature_n_plot = ggarrange(undated_feature_n_plot + ggtitle("12/2020 - 11/2021"),
julyonwards_feature_n_plot + ggtitle("07/2021 - 11/2021"), align = "h",
labels = list("A","B"))
feature_n_plot
feature_n_plot = ggarrange(undated_feature_n_plot + ggtitle("12/2020 - 11/2021"),
julyonwards_feature_n_plot + ggtitle("07/2021 - 11/2021"), align = "h",
labels = list("A","C"))
feature_n_plot
feature_n_plot = ggarrange(undated_feature_n_plot + ggtitle("12/2020 - 11/2021"),
julyonwards_feature_n_plot + ggtitle("07/2021 - 11/2021"), align = "h",
labels = list("A","B"))
feature_n_plot
feature_n_plot
patient_counts_30
patient_counts_30 %>% mutate(ordinal_counts = cut(n_var, breaks = seq(0,30,5)))
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim)
p_sub_scaled = scale_scan_factors(
patient_var_tmp %>% filter(n_var < 30 & CT < 26),
scan_factors_trim) %>% mutate(ordinal_counts = cut(n_var, breaks = seq(0,30,5)))
tmp = unitable(p_sub_scaled, other_iv = "CT")
unitable = function(patient_counts_uni, include,
dv = "ordinal_counts", other_iv = NA) {
index = 0; for (i in include) {
flag = T
index = index + 1
if (!is.na(other_iv)){
formulas_tmp = formula(paste0(dv, " ~", i, "+", other_iv))
} else {
formulas_tmp = formula(paste0(dv, " ~", i))
}
m <- tryCatch(mixed_model(formulas_tmp,
random = ~ 1 | run,
data = patient_counts_uni,
family = binomial, control = list(iter_EM = 0)),
error=function(e) flag<<-FALSE)
if (!flag) next
coef_table = summary(m)$coef_table
# table of estimates with 95% CI
tab <- cbind(estimate = coef_table[,1],
se = coef_table[,2], pvalue = coef_table[,4]) %>%
#UL = coef_table[,1] + 1.96 * coef_table[,2]) %>%
as.data.frame
out_odds_tmp = (tab) %>%
mutate(pval = coef_table[,4]) %>%
.[-1,] %>% rownames_to_column
if (index == 1) {
out_odds = out_odds_tmp
} else {
out_odds = rbind(out_odds, out_odds_tmp)
}
}
out_odds = out_odds %>% arrange(pval) %>%
mutate(rowname = str_remove(rowname, "YES"))
# count number of "YES" occurrences per column
YEScount = function(string) {
return(sum(str_count(string, pattern = "YES")))
}
counts = sapply(patient_counts_uni_tmp %>%
filter(!is.na(.data[[dv]])), YEScount)
df_counts = data.frame(rowname = names(counts), counts)
out = out_odds %>% left_join(df_counts, by = "rowname")
return(out)
}
tmp = unitable(p_sub_scaled, include = scan_factors, other_iv = "CT")
tmp
unitable = function(patient_counts_uni, include,
dv = "ordinal_counts", other_iv = NA) {
index = 0; for (i in include) {
flag = T
index = index + 1
if (!is.na(other_iv)){
formulas_tmp = formula(paste0(dv, " ~", i, "+", other_iv))
} else {
formulas_tmp = formula(paste0(dv, " ~", i))
}
m <- tryCatch(mixed_model(formulas_tmp,
random = ~ 1 | run,
data = patient_counts_uni,
family = binomial, control = list(iter_EM = 0)),
error=function(e) flag<<-FALSE)
if (!flag) next
coef_table = summary(m)$coef_table
# table of estimates with 95% CI
tab <- cbind(estimate = coef_table[,1],
se = coef_table[,2], pvalue = coef_table[,4]) %>%
#UL = coef_table[,1] + 1.96 * coef_table[,2]) %>%
as.data.frame
out_odds_tmp = (tab) %>%
mutate(pval = coef_table[,4]) %>%
.[-1,] %>% rownames_to_column
if (index == 1) {
out_odds = out_odds_tmp
} else {
out_odds = rbind(out_odds, out_odds_tmp)
}
}
out_odds = out_odds %>% arrange(pval) %>%
mutate(rowname = str_remove(rowname, 1))
# count number of "YES" occurrences per column
YEScount = function(string) {
return(sum(str_count(string, pattern = 1)))
}
counts = sapply(patient_counts_uni_tmp %>%
filter(!is.na(.data[[dv]])), YEScount)
df_counts = data.frame(rowname = names(counts), counts)
out = out_odds %>% left_join(df_counts, by = "rowname")
return(out)
}
tmp = unitable(p_sub_scaled, include = scan_factors, other_iv = "CT")
source("./scripts/startup.R")
source("./scripts/load_data.R")
normalize <- function(x, na.rm = TRUE) {
scaled = (x- min(x)) /(max(x)-min(x))
return()
}
patient_counts_30
